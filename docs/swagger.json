{
    "swagger": "2.0",
    "info": {
        "description": "This is a test server for Effective Mobile",
        "title": "Effective Mobile Test",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "3.0"
    },
    "host": "localhost:8000",
    "paths": {
        "/car/all": {
            "get": {
                "description": "Get all cars",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Get all cars",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Limit of cars in response",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset of cars in response",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request body or parameter"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/car/delete/{id}": {
            "delete": {
                "description": "Delete car by id",
                "tags": [
                    "Car"
                ],
                "summary": "Delete car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Car deleted"
                    },
                    "400": {
                        "description": "Invalid request body or parameter"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/car/new": {
            "post": {
                "description": "Add new car from a list of registration numbers",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Add new car",
                "parameters": [
                    {
                        "description": "List of registration numbers",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.RegNums"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Car added"
                    },
                    "400": {
                        "description": "Invalid request body or parameter"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/car/update/{id}": {
            "put": {
                "description": "Update car by id",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Car"
                ],
                "summary": "Update car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Car data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Car"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid request body or parameter"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Car": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "mark": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/entity.Owner"
                },
                "regNum": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "entity.Owner": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "entity.RegNums": {
            "type": "object",
            "properties": {
                "regNum": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}